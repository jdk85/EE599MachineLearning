/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rssi_mapping;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import javax.swing.JFileChooser;

/**
 *
 * @author atd43
 */
public class RSSI_Mapping extends javax.swing.JFrame {

	/**
	 * Generated serializable version ID - required when class 
	 * is serializable
	 */
	private static final long serialVersionUID = 1083808740418053965L;
	
	//Get the current directory where the file is being run
	private static String root_directory = (new File(".").getAbsolutePath()).toString().replace(".", "");
	
	private final String save_settings = root_directory + "Utilities" + File.separator + "RssiMappingSettings.save";
	
    
    private String rssi_filename, loc_filename, lookup_filename;
    
    private RSSI_Data rssi;
    private NodeLocations locs;
    private int num_nodes;
    
    private csvLoader loader;
    private Resources resources;

    /**
     * Creates new form RSSI_Mapping
     */
    public RSSI_Mapping() {
        try {
            BufferedReader reader = new BufferedReader(new FileReader(save_settings));
            rssi_filename = root_directory + "CSVs" + File.separator + reader.readLine();            
            loc_filename = root_directory + "CSVs" + File.separator + reader.readLine();
            lookup_filename = root_directory + "CSVs" + File.separator + reader.readLine();
            reader.close();
        } catch (IOException ex) {
        	ex.printStackTrace();
            rssi_filename = "";
            loc_filename = "";
            lookup_filename = "";
        }
        
        initComponents();

        fileChooser.setCurrentDirectory(new java.io.File("."));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        Mode_Button = new javax.swing.JToggleButton();
        filename_label = new javax.swing.JLabel();
        rssi_filename_text = new javax.swing.JTextField();
        rssiFileBrowse_button = new javax.swing.JButton();
        filename_label2 = new javax.swing.JLabel();
        loc_filename_text = new javax.swing.JTextField();
        locFileBrowse_button = new javax.swing.JButton();
        run_button = new javax.swing.JButton();
        Error_text = new javax.swing.JLabel();
        KnownNodes_label = new javax.swing.JLabel();
        UnknownNode_label = new javax.swing.JLabel();
        knownNodes_text = new javax.swing.JTextField();
        nodesToFind_text = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RSSI Mapping");
        setBounds(new java.awt.Rectangle(100, 100, 500, 500));
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(500, 200));

        Mode_Button.setText("Operational Mode");
        Mode_Button.setMaximumSize(new java.awt.Dimension(125, 25));
        Mode_Button.setMinimumSize(new java.awt.Dimension(125, 25));
        Mode_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mode_ButtonActionPerformed(evt);
            }
        });

        filename_label.setText("File containing the RSSI data:");

        rssi_filename_text.setText(rssi_filename);

        rssiFileBrowse_button.setText("Browse");
        rssiFileBrowse_button.setMaximumSize(new java.awt.Dimension(60, 23));
        rssiFileBrowse_button.setMinimumSize(new java.awt.Dimension(60, 23));
        rssiFileBrowse_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rssiFileBrowse_buttonActionPerformed(evt);
            }
        });

        filename_label2.setText("File containing the node location data:");

        loc_filename_text.setText(loc_filename);
        load_locs();
        loc_filename_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loc_filename_textActionPerformed(evt);
            }
        });
        loc_filename_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loc_filename_textKeyReleased(evt);
            }
        });

        locFileBrowse_button.setText("Browse");
        locFileBrowse_button.setMaximumSize(new java.awt.Dimension(60, 23));
        locFileBrowse_button.setMinimumSize(new java.awt.Dimension(60, 23));
        locFileBrowse_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locFileBrowse_buttonActionPerformed(evt);
            }
        });

        run_button.setText("Run Program");
        run_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_buttonActionPerformed(evt);
            }
        });

        KnownNodes_label.setText("Known Node Locations:");

        UnknownNode_label.setText("Node Locations to Find:");

        jMenu1.setText("File");

        jMenuItem6.setText("Open Building Map");
        jMenu1.add(jMenuItem6);

        jMenuItem3.setText("Open Lookup File");
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator1);

        jMenuItem1.setText("Run Operational");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Run Test");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Tools");

        jMenuItem5.setText("Run Distance Test");
        jMenu2.add(jMenuItem5);

        jMenuItem4.setText("Change Default File Locations");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Error_text))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rssi_filename_text)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rssiFileBrowse_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loc_filename_text)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(locFileBrowse_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(filename_label)
                                    .addComponent(filename_label2)
                                    .addComponent(KnownNodes_label)
                                    .addComponent(knownNodes_text, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nodesToFind_text, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(UnknownNode_label)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(run_button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Mode_Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 247, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filename_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rssi_filename_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rssiFileBrowse_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filename_label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loc_filename_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locFileBrowse_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KnownNodes_label)
                    .addComponent(UnknownNode_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(knownNodes_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nodesToFind_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(run_button)
                    .addComponent(Mode_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(Error_text))
        );

        Mode_Button.getAccessibleContext().setAccessibleName("Mode_Button");
        filename_label.getAccessibleContext().setAccessibleName("filename_label");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Mode_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mode_ButtonActionPerformed
        if (Mode_Button.getText().equals("Operational Mode")){
            Mode_Button.setText("Test Mode");
        }else{
            Mode_Button.setText("Operational Mode");
        }
    }//GEN-LAST:event_Mode_ButtonActionPerformed

    private void run_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_buttonActionPerformed
        //make sure the locations were entered correctly
        if (loader == null){
            load_locs();
            return;
        }
        
        //Load in the resources
        try {
            Error_text.setText("");
            resources = new Resources(lookup_filename);
        } catch (FileNotFoundException ex) {
            Error_text.setText("Error: File Not Found - Lookup");
            return;
        } catch (IOException ex) {
            Error_text.setText("Error: Could not read lookup data");
            return;
        }
        
        //Load in the RSSI data
        try {
            Error_text.setText("");
            rssi = new RSSI_Data(num_nodes);
            loader.ReadRSSI(rssi_filename_text.getText(), rssi);
            //System.out.println(rssi.toString());
        } catch (FileNotFoundException ex) {
            Error_text.setText("Error:File Not Found - RSSI");
            return;
        } catch (IOException ex) {
            Error_text.setText("Error: Could not read RSSI data");
            return;
        }
        
        
    }//GEN-LAST:event_run_buttonActionPerformed

    //browse for the rssi data file and put the location in the text field
    private void rssiFileBrowse_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rssiFileBrowse_buttonActionPerformed
        //open the file chooser dialog
        int confirm = fileChooser.showOpenDialog(RSSI_Mapping.this);
        
        //confirm it was completed successfully
        if (confirm == JFileChooser.APPROVE_OPTION){
            //set the text in the text field to the file name
            rssi_filename_text.setText(fileChooser.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_rssiFileBrowse_buttonActionPerformed

    private void locFileBrowse_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locFileBrowse_buttonActionPerformed
        //open the file chooser dialog
        int confirm = fileChooser.showOpenDialog(RSSI_Mapping.this);
        
        //confirm it was completed successfully
        if (confirm == JFileChooser.APPROVE_OPTION){
            //set the text in the text field to the file name
            loc_filename_text.setText(fileChooser.getSelectedFile().getPath());
            load_locs();
        }
    }//GEN-LAST:event_locFileBrowse_buttonActionPerformed

    private void load_locs(){
        knownNodes_text.setText(null);
        loader = null;
        
        try {
            Error_text.setText("");
            loader = new csvLoader(loc_filename_text.getText());
            num_nodes = loader.ReadNodes();
            locs = new NodeLocations(num_nodes);
            loader.ReadLocs(locs);
            knownNodes_text.setText(locs.getKnown());
        } catch (FileNotFoundException ex) {
            Error_text.setText("Error: File Not Found - Locations");
        } catch (IOException ex) {
            Error_text.setText("Error: Could not read location data");
        }
    }
    
    private void loc_filename_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loc_filename_textActionPerformed
        load_locs();
    }//GEN-LAST:event_loc_filename_textActionPerformed

    private void loc_filename_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loc_filename_textKeyReleased
        load_locs();
    }//GEN-LAST:event_loc_filename_textKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RSSI_Mapping.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RSSI_Mapping.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RSSI_Mapping.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RSSI_Mapping.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RSSI_Mapping().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Error_text;
    private javax.swing.JLabel KnownNodes_label;
    private javax.swing.JToggleButton Mode_Button;
    private javax.swing.JLabel UnknownNode_label;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel filename_label;
    private javax.swing.JLabel filename_label2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField knownNodes_text;
    private javax.swing.JButton locFileBrowse_button;
    private javax.swing.JTextField loc_filename_text;
    private javax.swing.JTextField nodesToFind_text;
    private javax.swing.JButton rssiFileBrowse_button;
    private javax.swing.JTextField rssi_filename_text;
    private javax.swing.JButton run_button;
    // End of variables declaration//GEN-END:variables
}
